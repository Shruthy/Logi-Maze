<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_plr3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variable
hsp = 0;
vsp=0;
movespeed = 0;

active =0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//freeze
if((global.dead == 1)|| (global.win ==1) )exit;

/// Get players input

key_right  = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_down = keyboard_check(vk_down);
key_up = -keyboard_check(vk_up);

// reaction to inputs - horizontal and vertical move
hmove = key_left + key_right;
hsp = hmove * movespeed;
//if(hsp&gt;0) image_angle = 0;
//if(hsp&lt;0) image_angle = 180;

vmove = key_up + key_down;
vsp = vmove * movespeed;
//if(vsp&gt;0) image_angle = 270;
//if(vsp&lt;0) image_angle = 90;

//horizontal collision
if(place_meeting(x+hsp,y,obj_mazewall)) || (place_meeting(x+hsp,y,obj_plr2)) || (place_meeting(x+hsp,y,obj_elewall)) || (place_meeting(x+hsp,y,obj_plr1)) {
    while(!place_meeting(x+sign(hsp),y,obj_mazewall)) &amp;&amp; (!place_meeting(x+sign(hsp),y,obj_elewall)) &amp;&amp; (!place_meeting(x+sign(hsp),y,obj_plr2)) &amp;&amp; (!place_meeting(x+sign(hsp),y,obj_plr1)) {
        x += sign(hsp);    
    }
    hsp = 0;
}
x += hsp;

//vertical collision
if(place_meeting(x,y+vsp,obj_mazewall)) || (place_meeting(x,y+vsp,obj_elewall)) || (place_meeting(x,y+vsp,obj_plr2)) || (place_meeting(x,y+vsp,obj_plr1))
{
    while(!place_meeting(x,y+sign(vsp),obj_mazewall)) &amp;&amp; (!place_meeting(x,y+sign(vsp),obj_elewall)) &amp;&amp; (!place_meeting(x,y+sign(vsp),obj_plr2)) &amp;&amp; (!place_meeting(x,y+sign(vsp),obj_plr1)){
        y += sign(vsp);    
    }
    vsp = 0;
}
y += vsp;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_halign(fa_middle);
draw_set_valign(fa_center);

//draw_text(x,y,"3");
draw_text(x,y - 30,global.plr3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
